digraph G {
130527073108768 [label="BB130527073108768{\nreg int t0 <- 1\nreg int t1 <- minus reg int t0\nglobal int x; _g_x: def byte 4 <- reg int t1\nread reg int t2\nglobal int x; _g_x: def byte 4 <- reg int t2\nreg int t3 <- global int x; _g_x: def byte 4\nreg int t4 <- 100\nreg int32_t t5 <- reg int t3 gtr reg int t4\nbranch on reg int32_t t5 to auto label label2}"];
130527073108768 -> 130527073108432 [label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073108768 -> 130527073108816 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073108432 [label="BB130527073108432{\nreg int t7 <- global int x; _g_x: def byte 4\nprint reg int t7\nbranch  to auto label label1}"];
130527073108432 -> 130527073108288 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073108816 [label="BB130527073108816{\n[auto label label2]\nlabel2: <class 'ir.EmptyStat'> 130527073117168 {
parent = 130527075054512
}\nreg int t8 <- global int x; _g_x: def byte 4\nreg int t10 <- minus reg int t8\nprint reg int t10}"];
130527073108816 -> 130527073108288 [label="{global char[5] arr; _g_arr: def byte 5, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073108288 [label="BB130527073108288{\n[auto label label1]\nlabel1: <class 'ir.EmptyStat'> 130527073116832 {
parent = 130527075054512
}\nreg int t11 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t11}"];
130527073108288 -> 130527073109104 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int squ; _g_squ: def byte 4}"];
130527073109104 [label="BB130527073109104{\n[auto label label3]\nlabel3: <class 'ir.EmptyStat'> 130527073109584 {
parent = 130527075054512
}\nreg int t17 <- global int x; _g_x: def byte 4\nreg int t18 <- 10\nreg int32_t t19 <- reg int t17 leq reg int t18\nbranch on not reg int32_t t19 to auto label label4}"];
130527073109104 -> 130527073108864 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int squ; _g_squ: def byte 4}"];
130527073109104 -> 130527073108528 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073108864 [label="BB130527073108864{\ncall  to auto function square\nreg int t12 <- global int x; _g_x: def byte 4\nreg int t13 <- 1\nreg int32_t t14 <- reg int t12 plus reg int t13\nglobal int x; _g_x: def byte 4 <- reg int32_t t14\nreg int t16 <- global int squ; _g_squ: def byte 4\nprint reg int t16\nbranch  to auto label label3}"];
130527073108864 -> 130527073109104 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int squ; _g_squ: def byte 4}"];
130527073108528 [label="BB130527073108528{\n[auto label label4]\nlabel4: <class 'ir.EmptyStat'> 130527073110208 {
parent = 130527075054512
}\nreg int t20 <- 101\nglobal int x; _g_x: def byte 4 <- reg int t20}"];
130527073108528 -> 130527073109488 [label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073109488 [label="BB130527073109488{\n[auto label label5]\nlabel5: <class 'ir.EmptyStat'> 130527073108384 {
parent = 130527075054512
}\nreg int t44 <- global int x; _g_x: def byte 4\nreg int t45 <- 105\nreg int32_t t46 <- reg int t44 leq reg int t45\nbranch on not reg int32_t t46 to auto label label6}"];
130527073109488 -> 130527073109248 [label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073109488 -> 130527073109296 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073109248 [label="BB130527073109248{\nreg int t26 <- global int x; _g_x: def byte 4\nreg int t21 <- global int x; _g_x: def byte 4\nreg int t22 <- 100\nreg int32_t t23 <- reg int t21 minus reg int t22\nreg int t24 <- 1\nreg int32_t t25 <- reg int32_t t23 times reg int t24\nreg &char t27 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t28 <- reg &char t27 plus reg int32_t t25\n[reg &char t28] <- reg int t26\nreg int t29 <- global int x; _g_x: def byte 4\nreg int t30 <- 100\nreg int32_t t31 <- reg int t29 minus reg int t30\nreg int t32 <- 1\nreg int32_t t34 <- reg int32_t t31 times reg int t32\nreg &char t39 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t40 <- reg &char t39 plus reg int32_t t34\nreg char t38 <- [reg &char t40]\nprint reg char t38\nreg int t41 <- global int x; _g_x: def byte 4\nreg int t42 <- 1\nreg int32_t t43 <- reg int t41 plus reg int t42\nglobal int x; _g_x: def byte 4 <- reg int32_t t43\nbranch  to auto label label5}"];
130527073109248 -> 130527073109488 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527073109296 [label="BB130527073109296{\n[auto label label6]\nlabel6: <class 'ir.EmptyStat'> 130527073122208 {
parent = 130527075054512
}\nreg int t47 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t47\nreg int t48 <- 1\nglobal int y; _g_y: def byte 4 <- reg int t48}"];
130527073109296 -> 130527073108672 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
130527073108672 [label="BB130527073108672{\n[auto label label9]\nlabel9: <class 'ir.EmptyStat'> 130527073122448 {
parent = 130527075054512
}\nreg int t88 <- global int x; _g_x: def byte 4\nreg int t89 <- 5\nreg int32_t t90 <- reg int t88 leq reg int t89\nbranch on not reg int32_t t90 to auto label label10}"];
130527073108672 -> 130527073108720 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
130527073108672 -> 130527073108912 [style=dashed,label="set()"];
130527073108720 [label="BB130527073108720{\n[auto label label7]\nlabel7: <class 'ir.EmptyStat'> 130527073108096 {
parent = 130527075054512
}\nreg int t85 <- global int y; _g_y: def byte 4\nreg int t86 <- 5\nreg int32_t t87 <- reg int t85 leq reg int t86\nbranch on not reg int32_t t87 to auto label label8}"];
130527073108720 -> 130527075054320 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
130527073108720 -> 130527075054272 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
130527075054320 [label="BB130527075054320{\nreg int t56 <- global int x; _g_x: def byte 4\nreg int t57 <- 1\nreg int32_t t59 <- reg int t56 times reg int t57\nreg &char t61 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t62 <- reg &char t61 plus reg int32_t t59\nreg char t60 <- [reg &char t62]\nreg int t49 <- global int x; _g_x: def byte 4\nreg int t50 <- 10\nreg int32_t t51 <- reg int t49 times reg int t50\nreg int t52 <- global int y; _g_y: def byte 4\nreg int t53 <- 2\nreg int32_t t54 <- reg int t52 times reg int t53\nreg int32_t t55 <- reg int32_t t51 plus reg int32_t t54\nreg &short t63 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t64 <- reg &short t63 plus reg int32_t t55\n[reg &short t64] <- reg char t60\nreg int t65 <- global int x; _g_x: def byte 4\nreg int t66 <- 10\nreg int32_t t67 <- reg int t65 times reg int t66\nreg int t68 <- global int y; _g_y: def byte 4\nreg int t69 <- 2\nreg int32_t t70 <- reg int t68 times reg int t69\nreg int32_t t72 <- reg int32_t t67 plus reg int32_t t70\nreg &short t77 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t78 <- reg &short t77 plus reg int32_t t72\nreg short t76 <- [reg &short t78]\nprint reg short t76\nreg int t79 <- global int x; _g_x: def byte 4\nreg int t80 <- 1\nreg int32_t t81 <- reg int t79 plus reg int t80\nglobal int x; _g_x: def byte 4 <- reg int32_t t81\nreg int t82 <- global int y; _g_y: def byte 4\nreg int t83 <- 1\nreg int32_t t84 <- reg int t82 plus reg int t83\nglobal int y; _g_y: def byte 4 <- reg int32_t t84\nbranch  to auto label label7}"];
130527075054320 -> 130527073108720 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
130527075054272 [label="BB130527075054272{\n[auto label label8]\nlabel8: <class 'ir.EmptyStat'> 130527073214896 {
parent = 130527075054512
}\nbranch  to auto label label9}"];
130527075054272 -> 130527073108672 [style=dashed,label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
130527073108912 [label="BB130527073108912{\n[auto label label10]\nlabel10: <class 'ir.EmptyStat'> 130527073216000 {
parent = 130527075054512
}}"];
130527073108912 -> exit130527074333584 [label="set()"];
130527075056384 [label="BB130527075056384{\nreg int t91 <- 1234\nauto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t91\nreg int t92 <- global int x; _g_x: def byte 4\nreg int t93 <- global int x; _g_x: def byte 4\nreg int32_t t94 <- reg int t92 times reg int t93\nglobal int squ; _g_squ: def byte 4 <- reg int32_t t94}"];
130527075056384 -> exit130527075054464 [label="{global char[5] arr; _g_arr: def byte 5, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
main [shape=box];
main -> 130527073108768 [label="{global char[5] arr; _g_arr: def byte 5, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50}"];
square [shape=box];
square -> 130527075056384 [label="{global char[5] arr; _g_arr: def byte 5, global short[5, 5] multid; _g_multid: def byte 50, global int x; _g_x: def byte 4, global int y; _g_y: def byte 4}"];
}
